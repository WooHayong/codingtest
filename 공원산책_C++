#include <string>
#include <vector>
#include <algorithm>
using namespace std;


vector<int> solution(vector<string> park, vector<string> routes) {
    vector<int> answer;
    pair<int, int> m1;

    for(int i = 0; i<park.size(); i++)
        for(int j=0; j<park[0].size(); j++)
                if(park[i][j]=='S')
                    m1 = make_pair(i,j);
            
                
  
    for(int i =0; i< routes.size(); i++)
    {
        char dir = routes[i][0];
         int num = routes[i][2] - '0';
        int dx=0; int dy = 0;
   
        if(dir == 'E')
            dx = 1;
        else if (dir == 'W')
            dx = -1;
        else if(dir == 'N')
                dy= - 1;
        else if(dir == 'S')
                dy = 1;
        
        int y = m1.first; // y축
        int x = m1.second;  // x축
        
          if(dx == 1){
              for(int i=0; i<num; i++)
              { 
                  
                  if(park[0].size()-1 - x < num  )
                  {
                      m1.second =  x;
                      break;
                  }
                  m1.second++;
                  if(park[m1.first][m1.second] == 'X')
                  {
                     m1.second=  x;
                      break;
                  }
                 
                
             }
          }
        else if(dx == -1){
              for(int i=0; i<num; i++)
              {
                    if( x < num )                                                                     
                  {
                        m1.second=  x;
                      break;
                  }
                   m1.second--;
                  if(park[m1.first][m1.second]== 'X')
                  {
                      m1.second=  x;
                      break;
                  }
                
                
             }
          }         
          if(dy == 1){
              for(int i=0; i<num; i++)
              {
                  if( park.size() - 1 -y < num )
                  {
                     m1.first=  y;
                      break;
                  }
                   m1.first++;
                  if(park[m1.first][m1.second]==  'X')
                  {
                     m1.first=  y;
                      break;
                  }
                  
                
             }
          }
        else if(dy == -1){
              for(int i=0; i<num; i++)
              {
                    if( y < num )
                  {
                       m1.first=  y;
                      break;
                  }
                   m1.first--;
                  if(park[m1.first][m1.second] == 'X')
                  {
                        m1.first=  y;    
                      break;
                  }
                
                
             }
          }
    }
    
     answer.push_back(m1.first);
    answer.push_back(m1.second);

    
    return answer;
}
